# This is a basic workflow to help you get started with Actions
name: CI/CD

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  compile:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout master
        uses: actions/checkout@v2
        
      - name: Setup go
        uses: actions/setup-go@v1
        with:
          go-version: '1.14.1' # The Go version to download (if necessary) and use.
      
      - name: Build server
        run: |
          cd $GITHUB_WORKSPACE/server
          CGO_ENABLED=0 go build .
        
      - name: Upload server binary
        uses: actions/upload-artifact@v1
        with:
          name: server
          path: server/server
    
  deploy:
    needs: [compile]
    runs-on: ubuntu-latest

    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: Checkout master
      uses: actions/checkout@v2
      with:
        submodules: true

    - name: Update SHA
      run: echo $GITHUB_SHA,$(git submodule foreach -q git rev-parse HEAD) > $GITHUB_WORKSPACE/site/_meta
      
    - name: Download server binary
      uses: actions/download-artifact@v1
      with:
        name: server
      
    - name: Build container image
      run: docker build -t kayoticsully/death-tax-web-shell:$(echo $GITHUB_SHA | head -c7) .
    
    - name: Docker Login
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
    
    - name: Push image to Docker Hub
      run: docker push kayoticsully/death-tax-web-shell
    
    - name: Update deployment file
      run: TAG=$(echo $GITHUB_SHA | head -c7) && sed -i 's|<IMAGE>|kayoticsully/death-tax-web-shell:'${TAG}'|' $GITHUB_WORKSPACE/config/deployment.yml
    
    - name: Save DigitalOcean kubeconfig
      uses: digitalocean/action-doctl@master
      env:
        DIGITALOCEAN_ACCESS_TOKEN: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      with:
        args: kubernetes cluster kubeconfig show prod > $GITHUB_WORKSPACE/.kubeconfig

    - name: Deploy to DigitalOcean Kubernetes
      run: kubectl --kubeconfig=$GITHUB_WORKSPACE/.kubeconfig apply -f $GITHUB_WORKSPACE/config/deployment.yml
    
    - name: Verify deployment
      run: kubectl --kubeconfig=$GITHUB_WORKSPACE/.kubeconfig rollout status -n death-tax deployment/death-tax-web-shell